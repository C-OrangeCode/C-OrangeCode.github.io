import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as l}from"./app-a1fbcbb6.js";const s={},c=l(`<h2 id="qt-creator编译过程做了什么" tabindex="-1"><a class="header-anchor" href="#qt-creator编译过程做了什么" aria-hidden="true">#</a> Qt Creator编译过程做了什么?</h2><figure><img src="https://img-blog.csdnimg.cn/img_convert/68665a597da91a563b24cf3787665031.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>当我们按下运行按钮的时, 其实Qt Creator编译器做了5件事情</li></ul><ul><li>对源文件进行预处理, 生成预处理文件</li><li>对预处理文件进行编译, 生成汇编文件</li><li>对汇编文件进行编译, 生成二进制文件</li><li>对二进制文件进行链接, 生成可执行文件</li><li>运行可执行文件</li></ul><hr><ul><li>Qt Creator编译过程验证</li></ul><ul><li><p><strong>1.编写代码, 保存源文件:</strong></p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello lnj\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><ul><li><p><strong>2.执行预处理编译</strong><br><img src="https://img-blog.csdnimg.cn/img_convert/2af92e78efb66b239f4ca96a99c6e228.png" alt="" loading="lazy"></p></li><li><p>执行预处理编译后生成的文件<br><img src="https://img-blog.csdnimg.cn/img_convert/362d51ee291b27f51140908a7244f463.png" alt="" loading="lazy"></p></li><li><p>打开预处理编译后生成的文件</p></li></ul><ul><li>处理源文件中预处理相关的指令</li><li>处理源文件中多余注释等<br><img src="https://img-blog.csdnimg.cn/img_convert/85fd0abb9c2aab02e1c4563bc1ec9ef8.png" alt="" loading="lazy"></li></ul><hr><ul><li><strong>3.执行汇编编译</strong><br><img src="https://img-blog.csdnimg.cn/img_convert/4fd0ccaf482c9cc55f01e765c417cf5e.png" alt="" loading="lazy"></li><li>执行汇编编译后生成的文件<br><img src="https://img-blog.csdnimg.cn/img_convert/a4c1f0baf9e24d3048dca3b46d6b466c.png" alt="" loading="lazy"></li><li>打开汇编编译后生成的文件<br><img src="https://img-blog.csdnimg.cn/img_convert/6f772a00140c7cf1676c8c20eb29a2e4.png" alt="" loading="lazy"></li></ul><hr><ul><li><strong>4.执行二进制编译</strong><br><img src="https://img-blog.csdnimg.cn/img_convert/35f2d59e43f7964b22a3bce00ac0b704.png" alt="" loading="lazy"></li><li>执行二进制编译后生成的文件<br><img src="https://img-blog.csdnimg.cn/img_convert/7869895f908c7b3527c3f8421852a3fd.png" alt="" loading="lazy"></li><li>打开二进制编译后生成的文件<br><img src="https://img-blog.csdnimg.cn/img_convert/aff25b0d0e698d8790b640cb1acc332e.png" alt="" loading="lazy"></li></ul><hr><ul><li><strong>5.执行链接操作</strong></li></ul><ul><li>将依赖的一些C语言函数库和我们编译好的二进制合并为一个文件<br><img src="https://img-blog.csdnimg.cn/img_convert/b0f09e30dd95ab87c87a5b3a8568bdf9.png" alt="" loading="lazy"></li></ul><ul><li>执行链接操作后生成的文件<br><img src="https://img-blog.csdnimg.cn/img_convert/6a20b54e83c2e2973ef46bd0cc015b72.png" alt="" loading="lazy"></li></ul><hr><ul><li><strong>6.运行链接后生成的文件</strong><br><img src="https://img-blog.csdnimg.cn/img_convert/c336c50cce49b91c0088449099ebeb88.png" alt="" loading="lazy"></li></ul><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2>`,20),t=[c];function e(o,r){return a(),i("div",null,t)}const d=n(s,[["render",e],["__file","33.html.vue"]]);export{d as default};
