import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as t,a as e,b as n}from"./app-a1fbcbb6.js";const s={},a=e("h2",{id:"结构体内存分析",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#结构体内存分析","aria-hidden":"true"},"#"),n(" 结构体内存分析")],-1),c=e("ul",null,[e("li",null,"给结构体变量开辟存储空间和给普通开辟存储空间一样, 会从内存地址大的位置开始开辟"),e("li",null,"给结构体成员开辟存储空间和给数组元素开辟存储空间一样, 会从所占用内存地址小的位置开始开辟"),e("li",null,"结构体变量占用的内存空间永远是所有成员中占用内存最大成员的倍数(对齐问题)")],-1),u=e("blockquote",null,[e("p",null,"+多实际的计算机系统对基本类型数据在内存中存放的位置有限制,它们会要求这些数据的起始地址的值是 某个数k的倍数,这就是所谓的内存对齐,而这个k则被称为该数据类型的对齐模数(alignment modulus)。"),e("ul",null,[e("li",null,"这种强制的要求一来简化了处理器与内存之间传输系统的设计,二来可以提升读取数据的速度。比如这么一种处理器,它每次读写内存的时候都从某个8倍数的地址开始,一次读出或写入8个字节的数据,假如软件能 保证double类型的数据都从8倍数地址开始,那么读或写一个double类型数据就只需要一次内存操作。否则,我们就可能需要两次内存操作才能完成这个动作,因为数据或许恰好横跨在两个符合对齐要求的8字节 内存块上")])],-1),_=[a,c,u];function r(i,d){return o(),t("div",null,_)}const f=l(s,[["render",r],["__file","25.html.vue"]]);export{f as default};
