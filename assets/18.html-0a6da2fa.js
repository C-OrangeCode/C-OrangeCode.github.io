import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,e}from"./app-a1fbcbb6.js";const c={},p=e(`<h2 id="指针类型" tabindex="-1"><a class="header-anchor" href="#指针类型" aria-hidden="true">#</a> 指针类型</h2><ul><li><p>在同一种编译器环境下,一个指针变量所占用的内存空间是固定的。<br><img src="https://img-blog.csdnimg.cn/img_convert/a95f575889111ad8d64cc2c1aa8ecb1e.png" alt="" loading="lazy"></p></li><li><p>虽然在同一种编译器下, 所有指针占用的内存空间是一样的,但不同类型的变量却占不同的字节数</p></li></ul><ul><li>一个int占用4个字节，一个char占用1个字节，而一个double占用8字节；</li><li>现在只有一个地址，我怎么才能知道要从这个地址开始向后访问多少个字节的存储空间呢，是4个，是1个，还是8个。</li><li>所以指针变量需要它所指向的数据类型告诉它要访问多少个字节存储空间<br><img src="https://img-blog.csdnimg.cn/img_convert/af1fd05a523d9ba4e196e326f537589b.png" alt="" loading="lazy"></li></ul><hr><h2 id="二级指针" tabindex="-1"><a class="header-anchor" href="#二级指针" aria-hidden="true">#</a> 二级指针</h2><ul><li>如果一个指针变量存放的又是另一个指针变量的地址,则称这个指针变量为指向指针的指针￼变量。也称为“二级指针”</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>    <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>cp<span class="token punctuation">;</span>
    cp <span class="token operator">=</span> <span class="token operator">&amp;</span>c<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>cp2<span class="token punctuation">;</span>
    cp2 <span class="token operator">=</span> <span class="token operator">&amp;</span>cp<span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;c = %c&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token operator">*</span>cp2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img-blog.csdnimg.cn/img_convert/af331163ce03df7573810fc05ceb03c6.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>多级指针的取值规则</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>m1<span class="token punctuation">;</span>  <span class="token comment">//取值***m1</span>
<span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>m2<span class="token punctuation">;</span> <span class="token comment">//取值*****m2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="练习" tabindex="-1"><a class="header-anchor" href="#练习" aria-hidden="true">#</a> 练习</h2><ul><li>定义一个函数交换两个变量的值</li><li>写一个函数，同时返回两个数的和与差</li></ul>`,13),t=[p];function o(l,i){return n(),s("div",null,t)}const u=a(c,[["render",o],["__file","18.html.vue"]]);export{u as default};
