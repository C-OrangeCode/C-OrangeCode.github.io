import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as d,c as e,e as r}from"./app-a1fbcbb6.js";const i={},a=r('<h2 id="什么是标识符" tabindex="-1"><a class="header-anchor" href="#什么是标识符" aria-hidden="true">#</a> 什么是标识符?</h2><ul><li>从字面上理解,就是用来标识某些东西的符号，标识的目的就是为了将这些东西区分开来</li><li>其实标识符的作用就跟人类的名字差不多，为了区分每个人，就在每个人出生的时候起了个名字</li><li>C 语言是由函数构成的，一个 C 程序中可能会有多个函数，为了区分这些函数，就给每一个函数都起了个名称, 这个名称就是标识符</li><li>综上所述: 程序员在程序中给函数、变量等起名字就是标识符</li></ul><hr><h2 id="标识符命名规则" tabindex="-1"><a class="header-anchor" href="#标识符命名规则" aria-hidden="true">#</a> 标识符命名规则</h2><ul><li>只能由字母(a~z、 A~Z)、数字、下划线组成</li><li>不能包含除下划线以外的其它特殊字符串</li><li>不能以数字开头</li><li>不能是 C 语言中的关键字</li><li>标识符严格区分大小写, test 和 Test 是两个不同的标识符</li></ul><hr><h2 id="练习" tabindex="-1"><a class="header-anchor" href="#练习" aria-hidden="true">#</a> 练习</h2><ul><li>以下是 C 语言中合法的标识符（Identifier）的一些例子：</li></ul><table><thead><tr><th>合法标识符</th><th>不合法标识符</th></tr></thead><tbody><tr><td>num</td><td>1num</td></tr><tr><td>_count</td><td>%count</td></tr><tr><td>myVar</td><td>my-Var</td></tr><tr><td>MyStruct</td><td>My Struct</td></tr><tr><td>my_function</td><td>my.function</td></tr><tr><td>x</td><td>x+y</td></tr><tr><td>my_variable_1</td><td>my variable</td></tr><tr><td>__name</td><td>123name</td></tr></tbody></table><p>C 语言中的标识符由字母、数字和下划线组成，必须以字母或下划线开头，长度没有限制。同时，C 语言是区分大小写的，因此变量名 <code>num</code> 和 <code>Num</code> 是不同的标识符。</p><p>需要注意的是，C 语言中有一些关键字（Keywords），如 <code>if</code>、<code>for</code>、<code>while</code> 等等，不能用作标识符。</p><hr><h2 id="标识符命名规范" tabindex="-1"><a class="header-anchor" href="#标识符命名规范" aria-hidden="true">#</a> 标识符命名规范</h2><ul><li>见名知意,能够提高代码的可读性</li><li>驼峰命名,能够提高代码的可读性</li><li>驼峰命名法就是当变量名或函数名是由多个单词连接在一起,构成标识符时,第一个单词以小写字母开始;第二个单词的首字母大写.</li><li>例如: myFirstName、myLastName 这样的变量名称看上去就像驼峰一样此起彼伏<br><img src="https://img-blog.csdnimg.cn/img_convert/2b8f50edb3b6449fb02a26a07c671ab4.png" alt="" loading="lazy"></li></ul>',14),l=[a];function c(o,n){return d(),e("div",null,l)}const m=t(i,[["render",c],["__file","14.html.vue"]]);export{m as default};
