import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as l,e as a,a as s,b as n}from"./app-a1fbcbb6.js";const c={},o=a(`<p>CSS 是在 HTML 4 开始使用的,是为了更好的渲染 HTML 元素而引入的</p><h2 id="如何使用-css" tabindex="-1"><a class="header-anchor" href="#如何使用-css" aria-hidden="true">#</a> 如何使用 CSS</h2><p>CSS 引入方式:</p><ul><li>行内式（详情看下面的实例）</li><li>内嵌式（详情看下面的实例）</li><li>外链式（详情看下面的实例）</li></ul><p>在本站的 HTML 教程中我们使用了内联 CSS 样式来介绍实例，这是为了简化的例子，也使得你能更容易在线编辑代码并在线运行实例。</p><h3 id="行内式-内联样式" tabindex="-1"><a class="header-anchor" href="#行内式-内联样式" aria-hidden="true">#</a> 行内式（内联样式）</h3><p>在 HTML 元素中使用 <code>style</code> 属性，将样式写在属性中，多个属性用英文 <code>;</code> 分割</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css">width=<span class="token string">&#39;100px&#39;</span><span class="token punctuation">;</span>height=<span class="token string">&#39;100px;&#39;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>”#“<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>空链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="内嵌式-内部样式" tabindex="-1"><a class="header-anchor" href="#内嵌式-内部样式" aria-hidden="true">#</a> 内嵌式（内部样式）</h3><p>在 HTML 文档头部 <code>&lt;head&gt;</code> 区域使用 <code>&lt;style&gt;</code> 元素 来包含 CSS</p>`,10),i=s("div",{class:"language-html line-numbers-mode","data-ext":"html"},[s("pre",{html:"",class:"language-html"},[s("code",null,[s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("head")]),s("span",{class:"token punctuation"},">")]),n(`
  `),s("span",{class:"token comment"},"<!-- 其它头部标签…… -->"),n(`
  `),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("style")]),n(),s("span",{class:"token attr-name"},"type"),s("span",{class:"token attr-value"},[s("span",{class:"token punctuation attr-equals"},"="),s("span",{class:"token punctuation"},'"'),n("text/css"),s("span",{class:"token punctuation"},'"')]),s("span",{class:"token punctuation"},">")]),s("span",{class:"token style"},[s("span",{class:"token language-css"},[n(`
    `),s("span",{class:"token selector"},"body"),n(),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},"width"),s("span",{class:"token punctuation"},":"),n(" 100%"),s("span",{class:"token punctuation"},";"),n(`
      `),s("span",{class:"token property"},"height"),s("span",{class:"token punctuation"},":"),n(" 100vh"),s("span",{class:"token punctuation"},";"),n(`
      `),s("span",{class:"token property"},"background-color"),s("span",{class:"token punctuation"},":"),n(" blue"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token selector"},"p"),n(),s("span",{class:"token punctuation"},"{"),n(`
      `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" orange"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
  `)])]),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"</"),n("style")]),s("span",{class:"token punctuation"},">")]),n(`
  `),s("span",{class:"token comment"},"<!-- 其它头部标签…… -->"),n(`
`),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"</"),n("head")]),s("span",{class:"token punctuation"},">")]),n(`
`)])]),s("div",{class:"highlight-lines"},[s("br"),s("br"),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("br"),s("br")]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),p=s("h3",{id:"外链式-外部引用",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#外链式-外部引用","aria-hidden":"true"},"#"),n(" 外链式（外部引用）")],-1),u=s("p",null,"将样式分类写在不同的 css 文件，中使用 link 标签，引入外部 CSS 样式文件",-1),r=s("div",{class:"language-html line-numbers-mode","data-ext":"html"},[s("pre",{html:"",class:"language-html"},[s("code",null,[s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("head")]),s("span",{class:"token punctuation"},">")]),n(`
  `),s("span",{class:"token comment"},"<!-- 其它头部标签…… -->"),n(`
  `),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"<"),n("link")]),n(),s("span",{class:"token attr-name"},"rel"),s("span",{class:"token attr-value"},[s("span",{class:"token punctuation attr-equals"},"="),s("span",{class:"token punctuation"},'"'),n("stylesheet"),s("span",{class:"token punctuation"},'"')]),n(),s("span",{class:"token attr-name"},"type"),s("span",{class:"token attr-value"},[s("span",{class:"token punctuation attr-equals"},"="),s("span",{class:"token punctuation"},'"'),n("text/css"),s("span",{class:"token punctuation"},'"')]),n(),s("span",{class:"token attr-name"},"href"),s("span",{class:"token attr-value"},[s("span",{class:"token punctuation attr-equals"},"="),s("span",{class:"token punctuation"},'"'),n("mystyle.css"),s("span",{class:"token punctuation"},'"')]),n(),s("span",{class:"token punctuation"},"/>")]),n(`
  `),s("span",{class:"token comment"},"<!-- 其它头部标签…… -->"),n(`
`),s("span",{class:"token tag"},[s("span",{class:"token tag"},[s("span",{class:"token punctuation"},"</"),n("head")]),s("span",{class:"token punctuation"},">")]),n(`
`)])]),s("div",{class:"highlight-lines"},[s("br"),s("br"),s("div",{class:"highlight-line"}," "),s("br"),s("br")]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),d=a('<div class="hint-container warning"><p class="hint-container-title">注意</p><p>强烈推荐将样式问文件写在外部 css 文件中，因为随着项目开发不断推进，css 样式表的体积会逐渐庞大，此时如果仍然将样式写在 html 内会存在如下问题：</p><ol><li><strong>可维护性差</strong>：将 CSS 样式直接写在 HTML 内会导致代码的混乱和难以维护。当需要修改样式时，需要在每个 HTML 文件中进行修改，而不是在单独的 CSS 文件中进行统一管理。</li><li><strong>代码冗余</strong>：如果多个 HTML 文件需要相同的样式，将样式直接写在 HTML 内会导致代码的冗余。每个 HTML 文件都需要重复编写相同的样式，增加了代码量。</li><li><strong>可读性差</strong>：将 CSS 样式直接写在 HTML 内会使 HTML 文件的可读性降低。HTML 文件本应关注结构和内容，而将样式混杂其中会使代码难以阅读和理解。</li><li><strong>无法重用</strong>：将 CSS 样式直接写在 HTML 内会导致样式无法重用。如果其他 HTML 文件需要相同的样式，就需要再次编写相同的样式代码，而不是直接引用已有的样式。</li><li><strong>难以维护一致性</strong>：将 CSS 样式直接写在 HTML 内会导致难以维护样式的一致性。如果需要修改样式，需要逐个查找并修改每个 HTML 文件中的样式，容易出现遗漏或不一致的情况。</li></ol><p>综上所述，将 CSS 样式直接写在 HTML 内虽然可以实现快速样式定义，但会导致可维护性差、代码冗余、可读性差、无法重用和难以维护一致性等问题。因此，推荐将 CSS 样式单独写在外部的 CSS 文件中，并通过链接方式引入 HTML 文件中，以提高代码的可维护性和可读性。</p></div><h2 id="已弃用的标签和属性" tabindex="-1"><a class="header-anchor" href="#已弃用的标签和属性" aria-hidden="true">#</a> 已弃用的标签和属性</h2><div class="hint-container danger"><p class="hint-container-title">警告</p><p>在 HTML 4, 原来支持定义 HTML 元素样式的标签和属性已被弃用。这些标签将不支持新版本的 HTML 标签。<br> 不建议使用的标签有: <code>&lt;font&gt;</code>, <code>&lt;center&gt;</code>, <code>&lt;strike&gt;</code><br> 不建议使用的属性: color 和 bgcolor.</p></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><table><thead><tr><th style="text-align:center;">引入方式</th><th style="text-align:center;">属性/标签</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;">行内式</td><td style="text-align:center;"><code>style</code></td><td>在 HTML 元素中使用 style 属性，将样式写在属性中，多个属性用英文 <code>;</code> 分割</td></tr><tr><td style="text-align:center;">内嵌式</td><td style="text-align:center;"><code>&lt;style&gt; </code></td><td>在 HTML 文档头部 <code>&lt;head&gt;</code> 标签内使用 <code>&lt;style&gt; </code>元素 来包含 CSS</td></tr><tr><td style="text-align:center;">外链式</td><td style="text-align:center;"><code>&lt;link/&gt;</code></td><td>将样式分类写在不同的 css 文件，中使用 link 标签，引入外部 CSS 样式文件</td></tr></tbody></table>',5),h=[o,i,p,u,r,d];function k(g,m){return e(),l("div",null,h)}const S=t(c,[["render",k],["__file","12.html.vue"]]);export{S as default};
