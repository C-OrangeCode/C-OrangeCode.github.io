import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,e}from"./app-a1fbcbb6.js";const l={},i=e(`<h2 id="什么是指针变量" tabindex="-1"><a class="header-anchor" href="#什么是指针变量" aria-hidden="true">#</a> 什么是指针变量</h2><ul><li>在C语言中,允许用一个变量来存放其它变量的地址, 这种专门用于存储其它变量地址的变量, 我们称之为指针变量<br><img src="https://img-blog.csdnimg.cn/img_convert/02442ae9685e56146470369e56ca18ab.png" alt="" loading="lazy"></li><li>示例:</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>    int age;// 定义一个普通变量
    num = 10;
    int *pnAge; // 定义一个指针变量
    pnAge = &amp;age;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img-blog.csdnimg.cn/img_convert/8b7b4d0976ad6e192e3ad6e26282fa8a.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="定义指针变量的格式" tabindex="-1"><a class="header-anchor" href="#定义指针变量的格式" aria-hidden="true">#</a> 定义指针变量的格式</h2><ul><li>指针变量的定义包括两个内容:</li></ul><ul><li>指针类型说明,即定义变量为一个指针变量;</li><li>指针变量名;<br><img src="https://img-blog.csdnimg.cn/img_convert/c051703dcae8535c264ef47c20881b53.png" alt="" loading="lazy"></li></ul><ul><li>示例:</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">char</span> ch <span class="token operator">=</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> <span class="token operator">*</span>p<span class="token punctuation">;</span> <span class="token comment">// 一个用于指向字符型变量的指针</span>
p <span class="token operator">=</span> <span class="token operator">&amp;</span>ch<span class="token punctuation">;</span>  
<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">666</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>q<span class="token punctuation">;</span> <span class="token comment">// 一个用于指向整型变量的指针</span>
q <span class="token operator">=</span> <span class="token operator">&amp;</span>num<span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li>其中,*表示这是一个指针变量</li><li>变量名即为定义的指针变量名</li><li>类型说明符表示本指针变量所指向的变量的数据类型</li></ul></blockquote><hr><h2 id="指针变量的初始化方法" tabindex="-1"><a class="header-anchor" href="#指针变量的初始化方法" aria-hidden="true">#</a> 指针变量的初始化方法</h2><ul><li>指针变量初始化的方法有两种:定义的同时进行初始化和先定义后初始化</li></ul><ul><li>定义的同时进行初始化</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>先定义后初始化</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
p<span class="token operator">=</span><span class="token operator">&amp;</span>a<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>把指针初始化为NULL</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>q<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>不合法的初始化:</li></ul><ul><li>指针变量只能存储地址, 不能存储其它类型</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
p <span class="token operator">=</span>  <span class="token number">250</span><span class="token punctuation">;</span> <span class="token comment">// 错误写法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>给指针变量赋值时,指针变量前不能再加“*”</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
<span class="token operator">*</span>p<span class="token operator">=</span><span class="token operator">&amp;</span>a<span class="token punctuation">;</span> <span class="token comment">//错误写法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意点:</li></ul><ul><li>多个指针变量可以指向同一个地址<br><img src="https://img-blog.csdnimg.cn/img_convert/d4c9b29d8ddb808d1a12252fdcdf538a.png" alt="" loading="lazy"></li></ul><ul><li>指针的指向是可以改变的</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
p <span class="token operator">=</span> <span class="token operator">&amp;</span>b<span class="token punctuation">;</span> <span class="token comment">// 修改指针指向</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>指针没有初始化里面是一个垃圾值,这时候我们这是一个野指针</li></ul><ul><li>野指针可能会导致程序崩溃</li><li>野指针访问你不该访问数据</li><li>所以指针必须初始化才可以访问其所指向存储区域<br><img src="https://img-blog.csdnimg.cn/img_convert/e38cdad483acddca8cfcd85e7ac0be78.png" alt="" loading="lazy"></li></ul><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2>`,31),p=[i];function t(c,o){return n(),s("div",null,p)}const u=a(l,[["render",t],["__file","16.html.vue"]]);export{u as default};
