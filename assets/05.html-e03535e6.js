import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as p,d as o,w as d,e as s,a,b as n}from"./app-a1fbcbb6.js";const i={},u=s(`<p>HTML 文档由 HTML 元素定义。</p><hr><h2 id="元素" tabindex="-1"><a class="header-anchor" href="#元素" aria-hidden="true">#</a> 元素</h2><table><thead><tr><th>开始标签</th><th>元素内容</th><th>结束标签</th></tr></thead><tbody><tr><td><code>&lt;p&gt;</code></td><td>这是一个段落</td><td><code>&lt;/p&gt;</code></td></tr><tr><td><code>&lt;a href=&quot;default.htm&quot;&gt;</code></td><td>这是一个链接</td><td><code>&lt;/a&gt;</code></td></tr><tr><td><code>&lt;br&gt;</code></td><td>换行</td><td><code>无</code></td></tr></tbody></table><p>开始标签常被称为起始标签（opening tag），结束标签常称为闭合标签（closing tag）。</p><h2 id="元素语法" tabindex="-1"><a class="header-anchor" href="#元素语法" aria-hidden="true">#</a> 元素语法</h2><ul><li>HTML 元素以开始标签起始</li><li>HTML 元素以结束标签终止</li><li>元素的内容是开始标签与结束标签之间的内容</li><li>某些 HTML 元素具有空内容（empty content）</li><li>空元素在开始标签中进行关闭（以开始标签的结束而结束）</li><li>大多数 HTML 元素可拥有属性</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>您将在本教程的下一章中学习更多有关属性的内容。</p></div><h2 id="元素嵌套" tabindex="-1"><a class="header-anchor" href="#元素嵌套" aria-hidden="true">#</a> 元素嵌套</h2><p>大多数 HTML 元素可以嵌套（HTML 元素可以包含其他 HTML 元素）。<br> HTML 文档由相互嵌套的 HTML 元素构成。</p><h2 id="文档实例" tabindex="-1"><a class="header-anchor" href="#文档实例" aria-hidden="true">#</a> 文档实例</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是第一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上实例包含了 <code>html</code>、<code>body</code>、<code>p</code> 三个 HTML 元素。</p><h2 id="实例解析" tabindex="-1"><a class="header-anchor" href="#实例解析" aria-hidden="true">#</a> 实例解析</h2><ul><li><code>&lt;p&gt;</code> 元素:</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是第一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个 <code>&lt;p&gt;</code> 元素定义了 HTML 文档中的一个段落。<br> 这个元素拥有一个开始标签 <code>&lt;p&gt;</code> 以及一个结束标签 <code>&lt;/p&gt;</code>.<br> 元素内容是: 这是第一个段落。</p><ul><li><code>&lt;body&gt;</code> 元素:</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是第一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;body&gt;</code> 元素定义了 HTML 文档的主体。<br> 这个元素拥有一个开始标签 <code>&lt;body&gt;</code> 以及一个结束标签 <code>&lt;/body&gt;</code>。<br> 元素内容是另一个 HTML 元素（p 元素）。</p><ul><li><code>&lt;html&gt;</code> 元素：</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是第一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;html&gt;</code> 元素定义了整个 HTML 文档。<br> 这个元素拥有一个开始标签 <code>&lt;html&gt;</code> ，以及一个结束标签 <code>&lt;/html&gt;</code>.<br> 元素内容是另一个 HTML 元素（body 元素）。</p><h2 id="结束标签" tabindex="-1"><a class="header-anchor" href="#结束标签" aria-hidden="true">#</a> 结束标签</h2><p>即使您忘记了使用结束标签，大多数浏览器也会正确地显示 HTML：</p>`,25),r=a("div",{class:"language-html line-numbers-mode","data-ext":"html"},[a("pre",{class:"language-html"},[a("code",null,[a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("p")]),a("span",{class:"token punctuation"},">")]),n(`这是一个段落
`),a("span",{class:"token tag"},[a("span",{class:"token tag"},[a("span",{class:"token punctuation"},"<"),n("p")]),a("span",{class:"token punctuation"},">")]),n(`这是一个段落
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),g=s('<div class="hint-container warning"><p class="hint-container-title">注意</p><p>以上实例在浏览器中也能正常显示，因为关闭标签是可选的。<br> 但不建议这样写。不使用结束标签可能会产生不可预料的结果或错误。</p></div><h2 id="空元素" tabindex="-1"><a class="header-anchor" href="#空元素" aria-hidden="true">#</a> 空元素</h2><ul><li>没有内容的 HTML 元素被称为空元素。空元素是在开始标签中关闭的。</li><li><code>&lt;br&gt;</code> 就是没有关闭标签的空元素（<code>&lt;br&gt;</code> 标签定义换行）。</li><li>在 XHTML、XML 以及未来版本的 HTML 中，所有元素都必须被关闭。</li><li>在开始标签中添加斜杠，比如 <code>&lt;br /&gt;</code>，是关闭空元素的正确方法，HTML、XHTML 和 XML 都接受这种方式。</li><li>即使 <code>&lt;br&gt;</code> 在所有浏览器中都是有效的，但使用 <code>&lt;br /&gt;</code> 其实是更长远的保障。</li></ul><h2 id="小提示" tabindex="-1"><a class="header-anchor" href="#小提示" aria-hidden="true">#</a> 小提示</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>使用小写标签<br> HTML 标签对大小写不敏感：<code>&lt;P&gt;</code> 等同于 <code>&lt;p&gt;</code>。许多网站都使用大写的 HTML 标签。<br> 本教程使用的是小写标签，因为万维网联盟（W3C）在 HTML 4 中推荐使用小写，而在未来 (X)HTML 版本中强制使用小写。</p></div>',5);function h(k,m){const t=l("CodeDemo");return c(),p("div",null,[u,o(t,{id:"code-demo-155",type:"normal",title:"%E6%B2%A1%E6%9C%89%E7%BB%93%E6%9D%9F%E6%A0%87%E7%AD%BE%E7%9A%84%E5%AE%9E%E4%BE%8B",code:"eJyrVsooyc1RslKyKbB7sX/msxnrn+xoeLJj1bN1W19M2BuTh0NYqRYAi5ghcg=="},{default:d(()=>[r]),_:1}),g])}const L=e(i,[["render",h],["__file","05.html.vue"]]);export{L as default};
