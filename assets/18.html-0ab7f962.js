import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-a1fbcbb6.js";const p={},c=t(`<h2 id="数组内部存储细节" tabindex="-1"><a class="header-anchor" href="#数组内部存储细节" aria-hidden="true">#</a> 数组内部存储细节</h2><ul><li>存储方式:</li></ul><ul><li>1)内存寻址从大到小, 从高地址开辟一块连续没有被使用的内存给数组</li><li>2)从分配的连续存储空间中, 地址小的位置开始给每个元素分配空间</li><li>3)从每个元素分配的存储空间中, 地址最大的位置开始存储数据</li><li>4)用数组名指向整个存储空间最小的地址</li></ul><ul><li>示例</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> cs<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;l&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;n&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;j&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;cs = %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>cs<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// cs = 0060FEA9</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;cs[0] = %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>cs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// cs[0] = 0060FEA9</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;cs[1] = %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>cs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// cs[1] = 0060FEAA</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;cs[2] = %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>cs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// cs[2] = 0060FEAB</span>

    <span class="token keyword">int</span> nums<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;nums = %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// nums = 0060FEA0</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;nums[0] = %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// nums[0] = 0060FEA0</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;nums[1] = %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>nums<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// nums[1] = 0060FEA4</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img-blog.csdnimg.cn/img_convert/e0aa63f597f92632c90cd1c5f6adc292.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><ul><li>注意:字符在内存中是以对应 ASCII 码值的二进制形式存储的,而非上述的形式。</li></ul></blockquote><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2>`,8),o=[c];function e(u,l){return s(),a("div",null,o)}const r=n(p,[["render",e],["__file","18.html.vue"]]);export{r as default};
