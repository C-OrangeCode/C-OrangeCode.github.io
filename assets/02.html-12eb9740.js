import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as c,c as o,a as n,b as s,d as l,e as a}from"./app-a1fbcbb6.js";const i="/assets/1565390986214-a67962bc.png",u={},d=a('<h2 id="_001-回顾" tabindex="-1"><a class="header-anchor" href="#_001-回顾" aria-hidden="true">#</a> 001.回顾</h2><ul><li>1.<code>Java</code>开发环境 <ul><li>1.<code>Java</code>编译运行过程 <ul><li>编译期:<code>.java</code>源文件,经过编译,生成<code>.class</code>字节码文件</li><li>运行期:<code>JVM</code>加载<code>.class</code>文件并运行</li><li>跨平台,一次编程,到处使用</li></ul></li><li>2.名词解释 <ul><li><code>JVM</code>:<code>java</code>虚拟机,加载并运行<code>.class</code></li><li><code>JRE</code>:<code>java</code>运行环境,<code>JVM</code>+<code>java</code>系统类库</li><li><code>JDK</code>:<code>java</code>开发工具包,<code>JRE</code>+开发<code>java</code>程序的必须命令工具</li></ul></li><li>3.配置环境变量</li></ul></li><li>2.<code>Eclipse</code><ul><li>IBM,开源的,免费的,<code>java</code>开发的<code>IDE</code>集成开发环境</li><li>开发步骤 <ul><li>1.创建<code>java</code>项目</li><li>2.创建<code>java</code>包</li><li>3.创建<code>java</code>类</li></ul></li><li>注释:解释性文本,计算机不会执行 <ul><li>单行注释 <code>//</code></li><li>多行注释 <code>/* */</code></li><li>文档注释 <code>/** */</code></li></ul></li></ul></li></ul><h2 id="_002-什么是变量" tabindex="-1"><a class="header-anchor" href="#_002-什么是变量" aria-hidden="true">#</a> 002.什么是变量</h2><blockquote><p>最早期的计算机是用来帮我们算数的(数字)</p><p>现在的计算机,还是用来算数的(数字,文字,图片,音频,视频等)<code>转换为01</code></p></blockquote><ul><li>举例:淘宝网</li></ul>',5),k={href:"http://www.taobao.com",target:"_blank",rel:"noopener noreferrer"},r=n("code",null,"一个数据",-1),v=a("<p>淘宝首页 <code>一堆数据</code></p><p>搜索手机壳 <code>交给淘宝处理的一个数据</code></p><p>返回搜索结果页面 <code>一堆数据</code></p><p>详情页面 <code>一堆数据</code></p><p>购物车 <code>一堆数据</code></p><p>结算 <code>一堆数据</code></p>",6),m=a(`<ul><li>总结</li></ul><blockquote><p>计算机的本质就是 <code>Input(输入数据)+Output(输出数据)</code></p></blockquote><ul><li>引出</li></ul><blockquote><p>变量就是用来存数据的.</p><p>变量是指在内存中开辟的存储空间,用于存放在运算过程中要用到的数据</p></blockquote><h2 id="_003-变量的声明" tabindex="-1"><a class="header-anchor" href="#_003-变量的声明" aria-hidden="true">#</a> 003.变量的声明</h2><ul><li>当需要使用一个变量时,必须对该变量进行声明</li><li>变量的声明包含两点:变量类型和变量名</li><li>一条语句可以声明多个同类型的变量</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Variable01</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//声明一个整型的变量,名为a</span>
		<span class="token keyword">int</span> a<span class="token punctuation">;</span>
		<span class="token comment">//声明三个整型的变量,名为b,c,d</span>
		<span class="token keyword">int</span> b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">;</span><span class="token comment">//注意,是用逗号隔开</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_004-变量的初始化" tabindex="-1"><a class="header-anchor" href="#_004-变量的初始化" aria-hidden="true">#</a> 004.变量的初始化</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Variable02</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 声明整型变量a并赋值为220</span>
		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">220</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> b<span class="token punctuation">;</span><span class="token comment">// 声明整型变量b</span>
		b <span class="token operator">=</span> <span class="token number">333</span><span class="token punctuation">;</span><span class="token comment">// 给变量b赋值为333</span>
		<span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		sum <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a+b=&quot;</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>1.声明的同时初始化</li><li>2.先声明,后初始化</li></ul><h2 id="_005-变量的使用" tabindex="-1"><a class="header-anchor" href="#_005-变量的使用" aria-hidden="true">#</a> 005.变量的使用</h2><ul><li>1.对变量的操作,就是对它所存的那个数的操作</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Variable03</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
		<span class="token comment">// 取出a的值,然后+10,再赋值给b</span>
		<span class="token keyword">int</span> b <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>
		<span class="token comment">// 打印b的值,这个时候 b=5+10</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a+10=&quot;</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>2.变量的操作必须与数据类型匹配 <ul><li>整数只能与整数相加</li><li>浮点数只能与浮点数运算</li></ul></li><li>3.变量在使用执行必须声明并初始化</li></ul><h2 id="_006-变量的命名" tabindex="-1"><a class="header-anchor" href="#_006-变量的命名" aria-hidden="true">#</a> 006.变量的命名</h2><ul><li>1.只能包含字母,熟悉,<code>_</code>下划线和<code>$</code>符,不能以数字开头</li><li>2.严格区分大小写</li><li>3.不能使用关键字,如<code>public</code>,<code>class</code>,<code>static</code>等</li><li>4.不建议使用中文名,最好是英文名,见名知意,驼峰命名法 <ul><li>除了首字母小写外,其他单词首字母都大写,适合变量名,方法名</li><li>大驼峰命名法也叫帕斯卡命名法,所有单词首字母都大写,适合类名</li></ul></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Variable04</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 1.变量的声明</span>
		<span class="token keyword">int</span> a<span class="token punctuation">;</span>
		<span class="token keyword">int</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">;</span>

		<span class="token comment">// 2.变量的初始化</span>
		<span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;年龄是:&quot;</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> score<span class="token punctuation">;</span>
		score <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;分数是:&quot;</span> <span class="token operator">+</span> score<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 3.变量的使用</span>
		age <span class="token operator">=</span> age <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;他今年又长了一岁,现在的年龄是:&quot;</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
		score <span class="token operator">=</span> score <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;老师很不开心,决定扣10分,他现在的分数是:&quot;</span> <span class="token operator">+</span> score<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_007-基本数据类型" tabindex="-1"><a class="header-anchor" href="#_007-基本数据类型" aria-hidden="true">#</a> 007.基本数据类型</h2><ul><li>1.<code>int</code>整型:4 个字节,只能装整数,-21 亿到 21 个多亿</li><li>2.<code>long</code>长整型:8 个字节,只能装整数,很大很大很大</li><li>3.<code>double</code>浮点型:8 个字节,只能装小数,很大很大很大</li><li>4.<code>boolean</code>布尔型:1 个字节,只能装 true 和 false</li><li>5.<code>char</code>字符型,2 个字节</li></ul><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_008-计算机基本单位转换" tabindex="-1"><a class="header-anchor" href="#_008-计算机基本单位转换" aria-hidden="true">#</a> 008.计算机基本单位转换</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1G=1024M(兆)
1M=1024KB(千字节)
1KB=1024B(字节)
1B=8Bit(位)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_009-int类型" tabindex="-1"><a class="header-anchor" href="#_009-int类型" aria-hidden="true">#</a> 009.<code>int</code>类型</h2><blockquote><p>int 是最常用的整数类型,一个 int 类型的变量占用 4 个字节(32 位)</p><p>所谓整数直接量(literal)就是直接写出的整数</p><p>例如:</p><p>int age=22;</p><p>这里的 22 就是直接量</p></blockquote><p>关于整数直接量,需要注意:</p><ul><li>整数的直接量类型默认为 int 类型</li><li>除了通常的十进制书写形式,整数直接量也经常写 16 进制的形式(<code>0x</code>或<code>0X</code>开头)或八进制(0 开头)</li><li>两个整数相除,会舍弃小数的部分(不是四舍五入),结果也是整数</li><li>两个整数进行运算时,其结果可能会超出整数的范围而溢出</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw<span class="token punctuation">.</span>datatype</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Int01</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 1.整数直接量默认为int类型,不能超范围</span>
		<span class="token comment">// 2.两个整数相除,小数部分直接舍弃,不会四舍五入</span>
		<span class="token comment">// 3.整数运算时,若超出范围,则发生溢出(需要避免)</span>
<span class="token comment">//		int salary=10000000000;//编译错误</span>
		<span class="token keyword">int</span> salary <span class="token operator">=</span> <span class="token number">100000000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span><span class="token comment">// 超过范围,不报错,溢出</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;当前的工资是:&quot;</span> <span class="token operator">+</span> salary<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>案例:数据溢出演示</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw<span class="token punctuation">.</span>datatype</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Int02</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 数据溢出案例演示</span>
		<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">2147483647</span><span class="token punctuation">;</span>
		num <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>

		num <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>

		num <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_010-long类型" tabindex="-1"><a class="header-anchor" href="#_010-long类型" aria-hidden="true">#</a> 010.<code>long</code>类型</h2><ul><li>在表示整数时,如果 int 类型的范围不够,可以使用<code>long</code>类型</li><li><code>long</code>有 8 字节 64 位</li><li>如果要表示<code>long</code>的直接量,直接在后面加上<code>l</code>或<code>L</code>即可</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw<span class="token punctuation">.</span>datatype</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Long01</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;定义一个Long类型的整数:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> salary <span class="token operator">=</span> <span class="token number">30000000000L</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;当前工资为:&quot;</span> <span class="token operator">+</span> salary<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>long 类型可以和 int 类型进行计算,结果是 long 类型</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw<span class="token punctuation">.</span>datatype</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Long02</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// int和long类型进行运算,自动转换为long类型</span>
		<span class="token keyword">int</span> salary <span class="token operator">=</span> <span class="token number">1000000000</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> num <span class="token operator">=</span> <span class="token number">1000L</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> result <span class="token operator">=</span> salary <span class="token operator">*</span> num<span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>案例:统计时间</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw<span class="token punctuation">.</span>datatype</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Long03</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 计算一年所用的毫秒数</span>
		<span class="token keyword">long</span> year <span class="token operator">=</span> <span class="token number">365</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;去年今天到今年今天的毫秒数为:&quot;</span> <span class="token operator">+</span> year<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 计算1970年1月1日零点到现在的毫秒数</span>
		<span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;1970年1月1日零点到现在的毫秒数为:&quot;</span> <span class="token operator">+</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_011-double类型" tabindex="-1"><a class="header-anchor" href="#_011-double类型" aria-hidden="true">#</a> 011.<code>double</code>类型</h2><blockquote><p>浮点型,8 个字节,只能装小数,范围很大很大</p></blockquote><ul><li>1.浮点数,就是小数,包括<code>float</code>和<code>double</code></li><li>2.<code>double</code>类型的精度值是<code>float</code>类型的两倍,这正是其名称<code>双精度</code>的来由</li><li>3.大多数场合使用<code>double</code>来表示浮点数</li><li>4.默认的浮点直接量为<code>double</code>类型,如果需要表示<code>float</code>类型,需要在后面加<code>f</code>或<code>F</code></li><li>5.浮点数的直接量有两种写法 <ul><li>通常写法</li><li>科学计数法 <code>1.33E3</code>相当于<code>1.33乘上10的3次方</code></li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>十进制:
1/2  0.5
1/4  0.25
以上称为精确表示
1/3  0.333333....
2/3  0.666666....
以上无法精确表示,称为无限循环小数

二进制:
二进制也有很多不能精确表示的数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>6.二进制系统中无法精确的表示<code>1/10</code>,就好像十进制无法精确表示<code>1/3</code>,所以,<code>double</code>类型的运算有时候会出现误差,所以,精确运算场合不能使用<code>double</code>类型,例如财务,这种时候可以使用<code>BigDecimal</code></p></li><li><p>案例:浮点型数据的定义方法</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw<span class="token punctuation">.</span>datatype</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Double01</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 创建一个double类型</span>
		<span class="token keyword">double</span> salary <span class="token operator">=</span> <span class="token number">30000.00</span><span class="token punctuation">;</span>
		<span class="token comment">// 创建一个float类型</span>
		<span class="token keyword">float</span> salary01 <span class="token operator">=</span> <span class="token number">30000.00F</span><span class="token punctuation">;</span><span class="token comment">// 后面加F</span>
		<span class="token comment">// 科学计数法表示</span>
		<span class="token keyword">double</span> sunSalary <span class="token operator">=</span> <span class="token number">3.33E4</span><span class="token punctuation">;</span>
		<span class="token comment">// 打印测试</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;唐唐的工资为:&quot;</span> <span class="token operator">+</span> salary<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;八戒的工资为:&quot;</span> <span class="token operator">+</span> salary01<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;悟空的工资为:&quot;</span> <span class="token operator">+</span> sunSalary<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_012-练习" tabindex="-1"><a class="header-anchor" href="#_012-练习" aria-hidden="true">#</a> 012.练习</h2><blockquote><ol><li></li></ol><p>声明整型变量 a 并赋值为 250</p><p>声明整型变量 b 并赋值为 100 亿</p><p>输出 5/2</p><p>输出 2/5</p><p>输出 2.0/5</p><p>声明整型变量 c 并赋值为 2147483647(int 最大值),然后加 1,输出 c</p></blockquote><blockquote><ol start="2"><li></li></ol><p>声明长整型变量 d 并赋值为 100 亿</p><p>声明长整型变量 e 并赋值为<code>10亿*2*10L</code>,输出 e</p><p>声明长整型变量 f 并赋值为<code>10亿*3*10L</code>,输出 f</p><p>声明长整型变量 g 并赋值为<code>10亿L*e*10</code>,输出 g</p><p>声明长整型变量 h 并赋值为<code>System.currentTimeMillis()</code>,输出 h</p></blockquote><blockquote><ol start="3"><li></li></ol><p>声明浮点型变量 pi 并赋值为 3.14</p><p>声明浮点型变量 i 和 j,并分别赋值为 6.0 和 4.9,输出<code>i-j</code></p></blockquote><h2 id="_013-练习参考答案" tabindex="-1"><a class="header-anchor" href="#_013-练习参考答案" aria-hidden="true">#</a> 013.练习参考答案</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw<span class="token punctuation">.</span>datatype</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Practice01</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 声明整型变量a并赋值为250</span>
		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">250</span><span class="token punctuation">;</span>
		<span class="token comment">// 声明整型变量b并赋值为100亿</span>
		<span class="token comment">// int b=10000000000;</span>
		<span class="token comment">// 输出5/2</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;5/2=&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 输出2/5</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;2/5=&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 输出2.0/5</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;2.0/5=&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 声明整型变量c并赋值为2147483647(int最大值),并加1,然后输出</span>
		<span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">2147483647</span><span class="token punctuation">;</span>
		c <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;c=&quot;</span> <span class="token operator">+</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 常量长整型变量d并赋值为100亿</span>
		<span class="token keyword">long</span> d <span class="token operator">=</span> <span class="token number">10000000000L</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> e <span class="token operator">=</span> <span class="token number">1000000000</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">10L</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> f <span class="token operator">=</span> <span class="token number">1000000000</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">10L</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> g <span class="token operator">=</span> <span class="token number">1000000000L</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;e=&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;f=&quot;</span> <span class="token operator">+</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;g=&quot;</span> <span class="token operator">+</span> g<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> h <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;h=&quot;</span> <span class="token operator">+</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 浮点型</span>
		<span class="token keyword">double</span> pi <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
		<span class="token keyword">double</span> i <span class="token operator">=</span> <span class="token number">6.0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">4.9</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i+j=&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_014-boolean类型" tabindex="-1"><a class="header-anchor" href="#_014-boolean类型" aria-hidden="true">#</a> 014.<code>boolean</code>类型</h2><ul><li>只允许取值为<code>true</code>或<code>false</code></li></ul><h2 id="_015-char类型" tabindex="-1"><a class="header-anchor" href="#_015-char类型" aria-hidden="true">#</a> 015.<code>char</code>类型</h2><ul><li>每一个<code>char</code>字符,都对应一个<code>int</code>类型的<code>Unicode</code>码</li><li>字符直接量需放在单引号中,只能有一个字符</li><li>常用码<code>a-97 A-65 0-48</code></li><li>特殊的符号需要通过<code>\\</code>来转义</li><li><code>Java</code>字符类型采用<code>Unicode</code>编码,字符类型实际上是一个 16 位的无符号整数</li><li>赋值方式有三种 <ul><li>字符直接量 <code>a</code></li><li>整型直接量 <code>97</code></li><li><code>Unicode</code>形式 <code>\\u097</code></li></ul></li></ul><h2 id="_016-练习" tabindex="-1"><a class="header-anchor" href="#_016-练习" aria-hidden="true">#</a> 016.练习</h2><blockquote><ol><li></li></ol><p>声明布尔型变量</p><p>b1 并赋值为 true</p><p>b2 并赋值为 false</p><p>b3 并赋值为 3.14</p></blockquote><blockquote><ol start="2"><li></li></ol><p>声明字符型变量</p><p>c1 并赋值为男</p><p>c2 并赋值为 m</p><p>c3 并赋值为 5</p><p>c4 并赋值为空格</p><p>c5 并赋值为空字符</p></blockquote><h2 id="_017-练习参考答案" tabindex="-1"><a class="header-anchor" href="#_017-练习参考答案" aria-hidden="true">#</a> 017.练习参考答案</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;哈哈哈&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> b1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> b2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token comment">//        boolean b3=3.14;</span>


        <span class="token comment">//字符型</span>
        <span class="token keyword">char</span> c1 <span class="token operator">=</span> <span class="token char">&#39;男&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> c2 <span class="token operator">=</span> <span class="token char">&#39;m&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> c3 <span class="token operator">=</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> c4 <span class="token operator">=</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>
        <span class="token comment">//char c5=&#39;&#39;;</span>
        <span class="token comment">//char c6=&#39;男性&#39;;</span>
        <span class="token keyword">char</span> c7 <span class="token operator">=</span> <span class="token number">98</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c7<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> c8 <span class="token operator">=</span> <span class="token char">&#39;\\&#39;&#39;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c8<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_018-基本数据类型直接的转换" tabindex="-1"><a class="header-anchor" href="#_018-基本数据类型直接的转换" aria-hidden="true">#</a> 018.基本数据类型直接的转换</h2><ul><li>1.两种方式 <ul><li>1.自动类型转换:小类型到大类型</li><li>2.强制类型转换:大类型到小类型 <ul><li>格式: <code>(要转换的类型)转换的数据</code></li><li>注意:强制转换有可能会丢失精度</li></ul></li></ul></li><li>2.两种规则 <ul><li>1.整数直接量可以直接赋值给 byte,short,char,但不能超出范围</li><li>2.byte,short,char 类型数据参与运算时,先一律转换为 int 再运算</li></ul></li></ul><p>数据类型从小到大依次为:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>byte  short int long float double char
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>案例:数据类型转换</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo02</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//基本数据类型转换</span>

        <span class="token comment">//1.自动转换 小-&gt;大</span>
        <span class="token keyword">byte</span> num1 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> num2 <span class="token operator">=</span> num1<span class="token punctuation">;</span>

        <span class="token comment">//2.强制类型转换 大-&gt;小</span>
        <span class="token keyword">double</span> num3 <span class="token operator">=</span> <span class="token number">33.33</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> num4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> num3<span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;num2=&quot;</span> <span class="token operator">+</span> num2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;num4=&quot;</span> <span class="token operator">+</span> num4<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>案例:<code>char</code>类型的运算</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo03</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">//正常情况下能够运行</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//char,byte,short类型需要先转换为int类型再运行</span>
        <span class="token comment">//字符从加法运算,实际上加的是Unicode编码</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token char">&#39;2&#39;</span> <span class="token operator">+</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">char</span> num1 <span class="token operator">=</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> num1<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//将字符转换为int类型,得到的也是Unicode编码值</span>


        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token char">&#39;2&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_019-练习" tabindex="-1"><a class="header-anchor" href="#_019-练习" aria-hidden="true">#</a> 019.练习</h2><blockquote><ol><li></li></ol><p>声明整型变量 a 并赋值为 6</p><p>声明长整型变量 b 并赋值为 a</p><p>声明整型变量 c 并赋值为 b</p></blockquote><blockquote><ol start="2"><li></li></ol><p>声明长整型变量 d 并赋值为 100 亿</p><p>声明整型变量 e 并赋值为 d,输出 e</p><p>声明浮点型变量 f 并赋值为 66.9999</p><p>声明整型变量 g 并赋值为 f,输出 g</p></blockquote><blockquote><ol start="3"><li></li></ol><p>声明 byte 类型变量<code>b1</code>和<code>b2</code>,分别赋值为 6 和 8</p><p>声明 byte 类型变量<code>b3</code>并赋值为<code>b1+b2</code></p></blockquote><blockquote><ol start="4"><li></li></ol><p>输出 2+2</p><p>输出 2+&#39;2&#39;</p><p>输出&#39;2&#39;+&#39;2&#39;</p></blockquote><h2 id="_020-练习参考答案" tabindex="-1"><a class="header-anchor" href="#_020-练习参考答案" aria-hidden="true">#</a> 020.练习参考答案</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Practice1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//1</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> b<span class="token punctuation">;</span>


        <span class="token comment">//2</span>
        <span class="token keyword">long</span> d <span class="token operator">=</span> <span class="token number">10000000000L</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> d<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">58.8855F</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> f<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//3</span>
        <span class="token keyword">byte</span> b1 <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> b2 <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span> b3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> b1 <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> b2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b3<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//4</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token char">&#39;2&#39;</span> <span class="token operator">+</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_021-scanner的用法" tabindex="-1"><a class="header-anchor" href="#_021-scanner的用法" aria-hidden="true">#</a> 021.<code>Scanner</code>的用法</h2><blockquote><p>给变量赋值</p></blockquote><ul><li>1.给一个固定的值</li><li>2.接收用户输入的值</li><li>3.系统随机生成的值</li></ul><blockquote><p>案例:接收用户输入的值</p></blockquote><ul><li>1.导入录入依赖库</li><li>2.创建录入对象</li><li>3.录入用户输入</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>
<span class="token comment">//1.导入录入依赖库</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Scanner1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//2.创建录入对象</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//录入数据</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入年龄:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3.接收用户输入</span>
        <span class="token keyword">int</span> age <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;您输入的年龄是:&quot;</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_022-练习" tabindex="-1"><a class="header-anchor" href="#_022-练习" aria-hidden="true">#</a> 022.练习</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1.创建类AgeRange,要求:
	接收用户输入的年龄age,并输出

2.创建LeapYear,要求:
	接收用户输入的年份,并输出
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_023-练习参考答案" tabindex="-1"><a class="header-anchor" href="#_023-练习参考答案" aria-hidden="true">#</a> 023.练习参考答案</h2><blockquote><p>第一题</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AgeRange</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入年龄:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> age <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;您的年龄是:&quot;</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>第二题</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lxgzhw</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LeapYear</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入年份:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> year <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;您输入的年份是:&quot;</span> <span class="token operator">+</span> year<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,85);function b(y,g){const t=e("ExternalLinkIcon");return c(),o("div",null,[d,n("blockquote",null,[n("p",null,[s("输入 "),n("a",k,[s("www.taobao.com"),l(t)]),s(),r]),v]),m])}const f=p(u,[["render",b],["__file","02.html.vue"]]);export{f as default};
