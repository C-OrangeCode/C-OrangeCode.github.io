import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as p}from"./app-a1fbcbb6.js";const e={},t=p(`<h2 id="循环嵌套" tabindex="-1"><a class="header-anchor" href="#循环嵌套" aria-hidden="true">#</a> 循环嵌套</h2><ul><li>循环结构的循环体中存在其他的循环结构，我们称之为循环嵌套 <ul><li>注意: 一般循环嵌套不超过三层</li><li>外循环执行的次数 * 内循环执行的次数就是内循环总共执行的次数</li></ul></li><li>格式:</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">while</span><span class="token punctuation">(</span>条件表达式<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span>循环结构 or dowhile循环结构 or <span class="token keyword">for</span>循环结构
<span class="token punctuation">}</span>
<span class="token keyword">for</span><span class="token punctuation">(</span>初始化表达式；循环条件表达式；循环后的操作表达式<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span>循环结构 or dowhile循环结构 or <span class="token keyword">for</span>循环结构
<span class="token punctuation">}</span>
<span class="token keyword">do</span> <span class="token punctuation">{</span>
     <span class="token keyword">while</span>循环结构 or dowhile循环结构 or <span class="token keyword">for</span>循环结构
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>循环控制条件 <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>循环优化 <ul><li>在多重循环中，如果有可能，应当将最长的循环放在最内层，最短的循环放在最外层，以减少 CPU 跨切循环层的次数</li></ul></li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> row<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 低效率：长循环在最外层</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span> col<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> col<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span> col<span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">=</span> sum <span class="token operator">+</span> a<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>col<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> col<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span> col<span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 高效率：长循环在最内层</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> row<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">=</span> sum <span class="token operator">+</span> a<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>练习 <ul><li>打印好友列表</li></ul></li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>好友列表<span class="token number">1</span>
    好友<span class="token number">1</span>
    好友<span class="token number">2</span>
好友列表<span class="token number">2</span>
    好友<span class="token number">1</span>
    好友<span class="token number">2</span>
好友列表<span class="token number">3</span>
    好友<span class="token number">1</span>
    好友<span class="token number">2</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;好友列表%d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    角色%d\\n&quot;</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2>`,8),o=[t];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","05.html.vue"]]);export{k as default};
